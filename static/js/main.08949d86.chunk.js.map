{"version":3,"sources":["components/FormComponent.jsx","components/TimeDomain.jsx","components/PowerBand.jsx","components/NavBar.jsx","components/LowerBins.jsx","components/UpperBins.jsx","components/UploadFile.jsx","components/FileName.jsx","App.js","index.js"],"names":["FormComponent","changeData","input","schema","sense","style","padding","children","formData","liveValidate","showErrorList","onChange","e","require","uiSchema","TimeDomain","index","PowerBand","number","NavBar","onUpload","fileName","onValidate","downLoadDisabled","downloadHref","Navbar","bg","expand","fixed","Container","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","href","marginLeft","Button","variant","marginRight","onClick","download","calculateLowerBins","tdSampleRate","fftSize","numBins","binWidth","fftBins","i","push","lowerBins","toFixed","LowerBins","Table","striped","bordered","hover","size","map","band","calculateUpperBins","upperBins","UpperBins","v","Validator","master_schema","UploadFile","updateFile","React","useState","file","setFile","setFileName","paddingTop","margin","display","justifyContent","border","Form","Group","controlId","Label","Control","type","target","files","name","fileReader","FileReader","readAsText","onload","json","JSON","parse","result","validate","errors","length","window","alert","handleSubmit","disabled","description","FileName","paddingBottom","defaultSense","Sense","TDSampleRate","FFT","FftSize","TimeDomains","PowerBands","App","setFormData","setSampleRate","setFftSize","tdEnabled","setTdEnabled","pbEnabled","setPbEnabled","showLowerBins","setShowLowerBins","showUpperBins","setShowUpperBins","showUploadFile","setShowUploadFile","setHref","setDownloadDisabled","data","updateTimeDomain","newTdEnabled","IsEnabled","newPbEnabled","updatePowerBands","fluid","scrollTo","console","log","endsWith","encodeURIComponent","stringify","confirm","inputForm","inputName","gap","marginTop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08949d86.chunk.js","sourcesContent":["import React from 'react';\nimport Form from \"@rjsf/core\";\n\nfunction FormComponent({changeData, input, schema, sense}) {\n    return (\n        <div style={{padding: '25px'}}>\n            <Form schema={schema} children={true} formData={input} liveValidate showErrorList={false} onChange={e => changeData(e.formData, sense)}/>\n        </div>\n    );\n}\n\nexport default FormComponent;","import React from 'react';\nimport Form from \"@rjsf/core\";\n\nconst schema = require('../schemas/TimeDomain_schema.json')\n\nconst uiSchema = {\n    \"Hpf\": {\n        \"ui:title\": \"Hpf (Hz)\"\n    },\n    \"Lpf1\": {\n        \"ui:title\": \"Lpf1 (Hz)\"\n    },\n    \"Lpf2\": {\n        \"ui:title\": \"Lpf2 (Hz)\"\n    }\n}\n\nfunction TimeDomain({changeData, input, index}) {\n    return (\n        <div style={{padding: '30px'}}>\n            <h3>Time Domain {index}</h3>\n            <Form schema={schema} children={true} uiSchema={uiSchema} liveValidate showErrorList={false} formData={input} onChange={e=>changeData(e.formData, index)}/>\n        </div>\n    );\n}\n\nexport default TimeDomain;","import React from 'react';\nimport Form from \"@rjsf/core\";\n\nconst schema = require('../schemas/PowerBand_schema.json')\n\nfunction PowerBand({changeData, input, index, number}) {\n    \n    return (\n    \n        <div>\n            <h5>PowerBand {number}</h5>\n            <Form schema={schema} children={true} liveValidate showErrorList={false} formData={input} onChange={e=>changeData(e.formData, index)}/>\n        </div>\n\n    );\n}\n\nexport default PowerBand;","import React from \"react\";\nimport { Navbar, Container, Nav, Button } from \"react-bootstrap\";\n\nfunction NavBar({ onUpload, fileName, onValidate, downLoadDisabled, downloadHref }) {\n\n  return (\n    <Navbar bg=\"light\" expand=\"lg\" fixed=\"top\">\n      <Container>\n        <Navbar.Brand>Sense Configuration</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link href=\"#general\">General</Nav.Link>\n            <Nav.Link href=\"#sensing\">Sensing</Nav.Link>\n            <Nav.Link href=\"#time-domains\">Time Domains</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n        <Nav className=\"ml-auto\" style={{ marginLeft: \"50px\" }}>\n          <Button\n            variant=\"secondary\"\n            style={{ marginRight: \"20px\" }}\n            onClick={onUpload}\n          >\n            Upload\n          </Button>\n        </Nav>\n        {downLoadDisabled ? (\n          <Button style={{ marginRight: \"20px\" }} onClick={onValidate}>\n            Validate\n          </Button>\n        ) : (\n          <Button\n            style={{ marginRight: \"20px\" }}\n            href={downloadHref}\n            download={fileName}\n          >\n            Download\n          </Button>\n        )}\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport NewWindow from \"react-new-window\";\n\nconst calculateLowerBins = (tdSampleRate, fftSize) => {\n  let numBins = fftSize / 2;\n  let binWidth = tdSampleRate / fftSize;\n\n  let fftBins = [];\n  for (let i = 0; i < numBins; i++) {\n    fftBins.push(i * binWidth);\n  }\n\n  let lowerBins = [0];\n  for (let i = 1; i < numBins; i++) {\n    lowerBins.push((fftBins[i] - binWidth / 2).toFixed(2));\n  }\n  return lowerBins;\n};\n\nconst LowerBins = ({ fftSize, tdSampleRate }) => (\n  <NewWindow>\n    <h1>Lower Bin</h1>\n    <h5>Fft Size: {fftSize}</h5>\n    <h5>TD Sample Rate: {tdSampleRate}</h5>\n    <Table striped bordered hover size=\"sm\">\n      <thead>\n        <tr>\n          <th>Bin Index</th>\n          <th>Band (Hz)</th>\n        </tr>\n      </thead>\n      <tbody>\n        {calculateLowerBins(tdSampleRate, fftSize).map((band, index) => {\n          return (\n            <tr key={index}>\n              <td>{index}</td>\n              <td>{band}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  </NewWindow>\n);\n\nexport default LowerBins;\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport NewWindow from \"react-new-window\";\n\nconst calculateUpperBins = (tdSampleRate, fftSize) => {\n  let numBins = fftSize / 2;\n  let binWidth = tdSampleRate / fftSize;\n\n  let fftBins = [];\n  for (let i = 0; i < numBins; i++) {\n    fftBins.push(i * binWidth);\n  }\n\n  let upperBins = [];\n  for (let i = 0; i < numBins; i++) {\n    upperBins.push((fftBins[i] + binWidth / 2).toFixed(2));\n  }\n  return upperBins;\n};\n\nconst UpperBins = ({ fftSize, tdSampleRate }) => (\n  <NewWindow>\n    <h1>Upper Bin</h1>\n<h5>Fft Size: {fftSize}</h5>\n<h5>TD Sample Rate: {tdSampleRate}</h5>\n    <Table striped bordered hover size=\"sm\">\n      <thead>\n        <tr>\n          <th>Bin Index</th>\n          <th>Band (Hz)</th>\n        </tr>\n      </thead>\n      <tbody>\n        {calculateUpperBins(tdSampleRate,fftSize).map((band,index)=>{\n            return(\n            <tr key={index}>\n                <td>{index}</td>\n                <td>{band}</td>\n            </tr>)\n        })}\n      </tbody>\n    </Table>\n  </NewWindow>\n);\n\nexport default UpperBins;\n","import React from \"react\";\nimport { Form, Container, Button } from \"react-bootstrap\";\n\nvar Validator = require(\"jsonschema\").Validator;\nvar v = new Validator();\nconst master_schema = require(\"../schemas/sense_config_schema.json\");\n\nfunction UploadFile({ updateFile }) {\n  const [file, setFile] = React.useState(null);\n  const [fileName, setFileName] = React.useState(null);\n  const handleSubmit = (e) => {\n    // Only accept json files\n    if (e.target.files[0] && e.target.files[0].type === \"application/json\") {\n      // Set file name\n      setFileName(e.target.files[0].name);\n      // Read json file\n      const fileReader = new FileReader();\n      fileReader.readAsText(e.target.files[0], \"UTF-8\");\n      fileReader.onload = (e) => {\n        // Get JSON data\n        const json = JSON.parse(e.target.result);\n        // Validate against master schema\n        if (v.validate(json, master_schema).errors.length === 0) {\n          // Upload success\n          setFile(JSON.parse(e.target.result));\n        } else {\n          window.alert(\"JSON file not valid\");\n        }\n      };\n    } else {\n      window.alert(\"Not a JSON file\");\n    }\n  };\n\n  return (\n    <Container style={{ paddingTop: \"60px\" }}>\n      <h3 style={{ margin: \"40px\" }}>Upload Sense Configuration</h3>\n      <Container\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          border: \"3px solid #808080\",\n          margin: \"20px\",\n        }}\n      >\n        <Form.Group controlId=\"formFile\" className=\"mb-3\">\n          <Form.Label>Sense JSON file</Form.Label>\n          <Form.Control type=\"file\" onChange={(e) => handleSubmit(e)} />\n        </Form.Group>\n        <Button\n          variant=\"success\"\n          style={{ margin: \"20px\" }}\n          disabled={file === null}\n          onClick={() => {\n            if (file) updateFile(file, fileName);\n          }}\n        >\n          Submit\n        </Button>\n      </Container>\n    </Container>\n  );\n}\n\nexport default UploadFile;\n","import React from 'react';\nimport Form from \"@rjsf/core\";\n\nconst schema = {\n    type: \"string\",\n    description: \"Make sure .json is in the name\"\n}\n\nfunction FileName({fileName, onChange}) {\n\n    \n    return (\n    \n        <div style={{padding: '25px', paddingBottom:'0px'}}>\n            <h5>File Name</h5>\n            <Form schema={schema} children={true} formData={fileName} onChange={e=>onChange(e.formData)}/>\n        </div>\n\n    );\n}\n\nexport default FileName;","import React from \"react\";\nimport { Container, Button } from \"react-bootstrap\";\nimport FormComponent from \"./components/FormComponent\";\nimport TimeDomain from \"./components/TimeDomain\";\nimport PowerBand from \"./components/PowerBand\";\nimport NavBar from \"./components/NavBar\";\nimport LowerBins from \"./components/LowerBins\";\nimport UpperBins from \"./components/UpperBins\";\nimport UploadFile from \"./components/UploadFile\";\nimport FileName from \"./components/FileName\";\n\nimport \"./App.css\";\n\n// Schema validator\nvar Validator = require(\"jsonschema\").Validator;\nvar v = new Validator();\n// Master schema\nconst master_schema = require(\"./schemas/sense_config_schema.json\");\n\n// Default sense for initial load\nconst defaultSense = {\n  Sense: {\n    TDSampleRate: 1000,\n    FFT: {\n      FftSize: 1024,\n    },\n    TimeDomains: [{}, {}, {}, {}],\n    PowerBands: [{}, {}, {}, {}, {}, {}, {}, {}],\n  },\n};\n\nfunction App() {\n  // The form with all values\n  const [formData, setFormData] = React.useState(defaultSense);\n  // Uploaded file name\n  const [fileName, setFileName] = React.useState(\"sense\");\n  // Sample rate and fft size for bin calculations\n  const [tdSampleRate, setSampleRate] = React.useState(1000);\n  const [fftSize, setFftSize] = React.useState(1024);\n  // Enabled td channels\n  const [tdEnabled, setTdEnabled] = React.useState([\n    false,\n    false,\n    false,\n    false,\n  ]);\n  // Enabled powerbands\n  const [pbEnabled, setPbEnabled] = React.useState([\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n  ]);\n  // Popup window for upper and lower bins\n  const [showLowerBins, setShowLowerBins] = React.useState(false);\n  const [showUpperBins, setShowUpperBins] = React.useState(false);\n  // Dropdown for file upload\n  const [showUploadFile, setShowUploadFile] = React.useState(false);\n  // Show download button and download link\n  const [downloadHref, setHref] = React.useState(\"\");\n  const [downLoadDisabled, setDownloadDisabled] = React.useState(true);\n  // Function called when an uploaded form is submitted\n  const uploadForm = (inputForm, inputName) => {\n    // Sets the enabled TD and powerbands\n    setTdEnabled([\n      inputForm.Sense.TimeDomains[0].IsEnabled,\n      inputForm.Sense.TimeDomains[1].IsEnabled,\n      inputForm.Sense.TimeDomains[2].IsEnabled,\n      inputForm.Sense.TimeDomains[3].IsEnabled,\n    ]);\n    setPbEnabled([\n      inputForm.Sense.PowerBands[0].IsEnabled,\n      inputForm.Sense.PowerBands[1].IsEnabled,\n      inputForm.Sense.PowerBands[2].IsEnabled,\n      inputForm.Sense.PowerBands[3].IsEnabled,\n      inputForm.Sense.PowerBands[4].IsEnabled,\n      inputForm.Sense.PowerBands[5].IsEnabled,\n      inputForm.Sense.PowerBands[6].IsEnabled,\n      inputForm.Sense.PowerBands[7].IsEnabled,\n    ]);\n    // Sets the new sample rate and fft size\n    setSampleRate(inputForm.Sense.TDSampleRate);\n    setFftSize(inputForm.Sense.FFT.FftSize);\n    // Overwrites formData\n    setFormData(inputForm);\n    // Hide upload file dropdown\n    setShowUploadFile(false);\n    // Updates file name\n    setFileName(inputName);\n    // Requires revalidation\n    setDownloadDisabled(true);\n  };\n\n  const validate = () => {\n    // Validates formData to the schema\n    console.log(formData)\n    if (v.validate(formData, master_schema).errors.length === 0) {\n      // Validates powerband for TD if disabled\n      for(var i=0;i<formData.Sense.TimeDomains.length;i++){\n        if (formData[\"Sense\"][\"TimeDomains\"][i].IsEnabled===false){\n          if(formData[\"Sense\"][\"PowerBands\"][i*2].IsEnabled===true || formData[\"Sense\"][\"PowerBands\"][i*2+1].IsEnabled===true ) {\n            window.alert(\"Some Powerbands are enabled for TD channels that are not enabled\")\n            return\n          } \n        }\n      }\n      // Validates file name\n      if (fileName.length > 5 && fileName.endsWith(\".json\")) {\n        // If validated, allow download and update download link\n        setDownloadDisabled(false);\n        setHref(\n          `data:text/json;charset=utf-8,${encodeURIComponent(\n            JSON.stringify(formData)\n          )}`\n        );\n        window.confirm(`Please comfirm your file name: ${fileName}`);\n      }\n      else{\n        window.alert(\"File name not valid\")\n      }\n    } else {\n      window.alert(\"There are some required fields missing\");\n    }\n  };\n\n  // Data update for General and Sensing section\n  const changeData = (data, sense) => {\n    // If the data comes from the sensing section\n    if (sense) {\n      formData[\"Sense\"] = data;\n      // Updates sample rate and fft size\n      setSampleRate(formData.Sense.TDSampleRate);\n      setFftSize(formData.Sense.FFT.FftSize);\n    } else {\n      setFormData(data);\n    }\n    // Requires revalidation\n    setDownloadDisabled(true);\n  };\n\n  // Data update for time domain data\n  const updateTimeDomain = (data, index) => {\n    if (data) {\n      formData[\"Sense\"][\"TimeDomains\"][index] = data;\n      \n      // Checks if enabled and updates the array\n      var newTdEnabled = [...tdEnabled];\n      newTdEnabled[index] = data.IsEnabled;\n      setTdEnabled(newTdEnabled);\n      // Update power bands if corresponding TD is turned off\n      if (data.IsEnabled===false){\n        formData[\"Sense\"][\"PowerBands\"][index*2] = {...formData[\"Sense\"][\"PowerBands\"][index*2], IsEnabled: false}\n        formData[\"Sense\"][\"PowerBands\"][index*2+1] = {...formData[\"Sense\"][\"PowerBands\"][index*2+1], IsEnabled: false}\n        var newPbEnabled = [...pbEnabled]\n        newPbEnabled[index*2]=false\n        newPbEnabled[index*2+1]=false\n        setPbEnabled(newPbEnabled)\n      }\n    }\n    // Requires revalidation\n    setDownloadDisabled(true);\n  };\n\n  // Data update for powerbands data\n  const updatePowerBands = (data, index) => {\n    if (data) {\n      formData[\"Sense\"][\"PowerBands\"][index] = data;\n      // Checks if enabled and updates the array\n      var newPbEnabled = [...pbEnabled];\n      newPbEnabled[index] = data.IsEnabled;\n      setPbEnabled(newPbEnabled);\n    }\n    // Requires revalidation\n    setDownloadDisabled(true);\n  };\n\n  const updateFileName = (data) => {\n    setFileName(data);\n    // Requires revalidation\n    setDownloadDisabled(true);\n  };\n\n  return (\n    <Container fluid>\n      <NavBar\n        onUpload={() => {\n          setShowUploadFile(!showUploadFile);\n          window.scrollTo(0, 0);\n        }}\n        fileName={fileName}\n        onValidate={validate}\n        downloadHref={downloadHref}\n        downLoadDisabled={downLoadDisabled}\n      />\n      {/* Upload file dropdown */}\n      {showUploadFile ? <UploadFile updateFile={uploadForm} /> : \"\"}\n      {/* General Section */}\n      <Container id=\"general\">\n        <h1 style={{ marginLeft: \"55px\", paddingTop: \"80px\" }}>General</h1>\n        <Container className=\"main-window\">\n          {/* 1st column */}\n          <Container>\n            <FileName fileName={fileName} onChange={updateFileName} />\n            <FormComponent\n              schema={require(\"./schemas/Mode_Ratio_schema.json\")}\n              changeData={changeData}\n              sense={false}\n              input={formData}\n            />\n            <FormComponent\n              schema={require(\"./schemas/TDSampleRate_schema.json\")}\n              changeData={changeData}\n              sense={true}\n              input={formData.Sense}\n            />\n          </Container>\n          {/* 2nd column */}\n          <Container>\n            <FormComponent\n              schema={require(\"./schemas/SenseOptions_schema.json\")}\n              changeData={changeData}\n              sense={false}\n              input={formData}\n            />\n          </Container>\n          {/* 3rd column */}\n          <Container>\n            <FormComponent\n              schema={require(\"./schemas/StreamEnables_schema.json\")}\n              changeData={changeData}\n              sense={false}\n              input={formData}\n            />\n          </Container>\n          {/* Sensing section */}\n        </Container>\n        <h1 id=\"sensing\" style={{ marginLeft: \"55px\", paddingTop: \"60px\" }}>\n          Sensing\n        </h1>\n        <Container className=\"main-window\">\n          {/* 1st column */}\n          <Container>\n            <FormComponent\n              schema={require(\"./schemas/FFT_schema.json\")}\n              changeData={changeData}\n              sense={true}\n              input={formData.Sense}\n            />\n          </Container>\n          {/* 2nd column */}\n          <Container>\n            <FormComponent\n              schema={require(\"./schemas/Accelerometer_schema.json\")}\n              changeData={changeData}\n              sense={true}\n              input={formData.Sense}\n            />\n            <FormComponent\n              schema={require(\"./schemas/Misc_schema.json\")}\n              changeData={changeData}\n              sense={true}\n              input={formData.Sense}\n            />\n          </Container>\n        </Container>\n        {/* Time Domains section */}\n        <Container>\n          <Container style={{ display: \"flex\", gap: \"30px\" }}>\n            <h1 id=\"time-domains\" style={{ paddingTop: \"60px\" }}>\n              Time Domains\n            </h1>\n            {/* Button for lower bins */}\n            <Button\n              onClick={() => {\n                setShowLowerBins(!showLowerBins);\n              }}\n              variant=\"secondary\"\n              style={{ marginTop: \"60px\", marginLeft: \"100px\" }}\n            >\n              Lower Bins\n            </Button>\n            {/* Button for upper bins */}\n            <Button\n              onClick={() => {\n                setShowUpperBins(!showUpperBins);\n              }}\n              variant=\"secondary\"\n              style={{ marginTop: \"60px\" }}\n            >\n              Upper Bins\n            </Button>\n          </Container>\n          <p style={{padding:'15px'}}>No more than two channels can be on a single bore. When configuring, channels on first bore will always be first.</p>\n          <Container style={{ display: \"flex\" }}>\n            {/* Time Domain 0 */}\n            <Container\n              className={tdEnabled[0] ? \"td-enabled\" : \"td-disabled\"}\n              style={{ marginRight: \"20px\" }}\n            >\n              <TimeDomain\n                changeData={updateTimeDomain}\n                input={formData.Sense.TimeDomains[0]}\n                index={0}\n              />\n              {/* Powerbands 0,1 */}\n              <Container className=\"powerband-column\">\n                <Container\n                  className={\n                    tdEnabled[0] && pbEnabled[0] ? \"pb-enabled\" : \"pb-disabled\"\n                  }\n                >\n                  <PowerBand\n                    changeData={updatePowerBands}\n                    input={formData.Sense.PowerBands[0]}\n                    index={0}\n                    number={0}\n                  />\n                </Container>\n                <Container\n                  className={\n                    tdEnabled[0] && pbEnabled[1] ? \"pb-enabled\" : \"pb-disabled\"\n                  }\n                >\n                  <PowerBand\n                    changeData={updatePowerBands}\n                    input={formData.Sense.PowerBands[1]}\n                    index={1}\n                    number={1}\n                  />\n                </Container>\n              </Container>\n            </Container>\n            {/* Time Domain 1 */}\n            <Container className={tdEnabled[1] ? \"td-enabled\" : \"td-disabled\"}>\n              <TimeDomain\n                changeData={updateTimeDomain}\n                input={formData.Sense.TimeDomains[1]}\n                index={1}\n              />\n              {/* Powerbands 0 and 1 */}\n              <Container className=\"powerband-column\">\n                <Container\n                  className={\n                    tdEnabled[1] && pbEnabled[2] ? \"pb-enabled\" : \"pb-disabled\"\n                  }\n                >\n                  <PowerBand\n                    changeData={updatePowerBands}\n                    input={formData.Sense.PowerBands[2]}\n                    index={2}\n                    number={0}\n                  />\n                </Container>\n                <Container\n                  className={\n                    tdEnabled[1] && pbEnabled[3] ? \"pb-enabled\" : \"pb-disabled\"\n                  }\n                >\n                  <PowerBand\n                    changeData={updatePowerBands}\n                    input={formData.Sense.PowerBands[3]}\n                    index={3}\n                    number={1}\n                  />\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n          <Container style={{ display: \"flex\" }}>\n            {/* Time Domain 2 */}\n            <Container\n              className={tdEnabled[2] ? \"td-enabled\" : \"td-disabled\"}\n              style={{ marginRight: \"20px\" }}\n            >\n              <TimeDomain\n                changeData={updateTimeDomain}\n                input={formData.Sense.TimeDomains[2]}\n                index={2}\n              />\n              {/* Powerbands 0,1 */}\n              <Container className=\"powerband-column\">\n                <Container\n                  className={\n                    tdEnabled[2] && pbEnabled[4] ? \"pb-enabled\" : \"pb-disabled\"\n                  }\n                >\n                  <PowerBand\n                    changeData={updatePowerBands}\n                    input={formData.Sense.PowerBands[4]}\n                    index={4}\n                    number={0}\n                  />\n                </Container>\n                <Container\n                  className={\n                    tdEnabled[2] && pbEnabled[5] ? \"pb-enabled\" : \"pb-disabled\"\n                  }\n                >\n                  <PowerBand\n                    changeData={updatePowerBands}\n                    input={formData.Sense.PowerBands[5]}\n                    index={5}\n                    number={1}\n                  />\n                </Container>\n              </Container>\n            </Container>\n            {/* Time Domain 3 */}\n            <Container\n              className={tdEnabled[3] ? \"td-enabled\" : \"td-disabled\"}\n              style={{ marginRight: \"20px\" }}\n            >\n              <TimeDomain\n                changeData={updateTimeDomain}\n                input={formData.Sense.TimeDomains[3]}\n                index={3}\n              />\n              {/* Powerbands 0,1 */}\n              <Container className=\"powerband-column\">\n                <Container\n                  className={\n                    tdEnabled[3] && pbEnabled[6] ? \"pb-enabled\" : \"pb-disabled\"\n                  }\n                >\n                  <PowerBand\n                    changeData={updatePowerBands}\n                    input={formData.Sense.PowerBands[6]}\n                    index={6}\n                    number={0}\n                  />\n                </Container>\n                <Container\n                  className={\n                    tdEnabled[3] && pbEnabled[7] ? \"pb-enabled\" : \"pb-disabled\"\n                  }\n                >\n                  <PowerBand\n                    changeData={updatePowerBands}\n                    input={formData.Sense.PowerBands[7]}\n                    index={7}\n                    number={1}\n                  />\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n        </Container>\n      </Container>\n\n      {showLowerBins ? (\n        <LowerBins fftSize={fftSize} tdSampleRate={tdSampleRate} />\n      ) : (\n        \"\"\n      )}\n      {showUpperBins ? (\n        <UpperBins fftSize={fftSize} tdSampleRate={tdSampleRate} />\n      ) : (\n        \"\"\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <HashRouter>\n      <App />\n    </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}